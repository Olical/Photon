Format: 1.52


Title: Photon API documentation
SubTitle: Lightweight, fast and modular JavaScript library

# You can add a footer to your documentation like this:
# Footer: [text]
# If you want to add a copyright notice, this would be the place to do it.

# You can add a timestamp to your documentation like one of these:
# Timestamp: Generated on month day, year
# Timestamp: Updated mm/dd/yyyy
# Timestamp: Last updated mon day
#
#   m     - One or two digit month.  January is "1"
#   mm    - Always two digit month.  January is "01"
#   mon   - Short month word.  January is "Jan"
#   month - Long month word.  January is "January"
#   d     - One or two digit day.  1 is "1"
#   dd    - Always two digit day.  1 is "01"
#   day   - Day with letter extension.  1 is "1st"
#   yy    - Two digit year.  2006 is "06"
#   yyyy  - Four digit year.  2006 is "2006"
#   year  - Four digit year.  2006 is "2006"


# --------------------------------------------------------------------------
# 
# Cut and paste the lines below to change the order in which your files
# appear on the menu.  Don't worry about adding or removing files, Natural
# Docs will take care of that.
# 
# You can further organize the menu by grouping the entries.  Add a
# "Group: [name] {" line to start a group, and add a "}" to end it.
# 
# You can add text and web links to the menu by adding "Text: [text]" and
# "Link: [name] ([URL])" lines, respectively.
# 
# The formatting and comments are auto-generated, so don't worry about
# neatness when editing the file.  Natural Docs will clean it up the next
# time it is run.  When working with groups, just deal with the braces and
# forget about the indentation and comments.
# 
# --------------------------------------------------------------------------


Text: The following tree represents the structure for requiring modules. So to require Class you would load `photon/core/Class`.

Group: photon  {

   Group: core  {

      File: Class  (core/Class.js)
      File: clone  (core/clone.js)
      File: contains  (core/contains.js)
      File: each  (core/each.js)
      File: every  (core/every.js)
      File: index  (core/index.js)
      File: keys  (core/keys.js)
      File: limit  (core/limit.js)
      File: merge  (core/merge.js)
      File: pick  (core/pick.js)
      File: random  (core/random.js)
      File: range  (core/range.js)
      File: scope  (core/scope.js)
      File: some  (core/some.js)
      File: type  (core/type.js)
      }  # Group: core

   File: Meta  (meta.js)
   }  # Group: photon

Group: Index  {

   Index: Everything
   Class Index: Classes
   Function Index: Functions
   File Index: Files
   }  # Group: Index

